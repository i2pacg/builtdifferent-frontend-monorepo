{
  "version": "2.0.0",
  "tasks": [
    {
      "type": "npm",
      "script": "dev:dashboard",
      "problemMatcher": [
        {
          "pattern": [
            {
              // Match Turbo's task start pattern in TUI mode
              "regexp": "^.*?dashboard:dev \\| (ready in \\d+ms).*$",
              "file": 1,
              "line": 1,
              "column": 1,
              "message": 1
            }
          ],
          "background": {
            "activeOnStart": true,
            // Match Turbo's task initialization
            "beginsPattern": "^.*?Tasks starting.*$",
            // Match the ready state of Vite through Turbo's TUI
            "endsPattern": "^.*?dashboard:dev \\| âžœ\\s+Local:.*$"
          }
        },
        {
          // Additional matcher for Vite error reporting through Turbo
          "owner": "typescript",
          "pattern": [
            {
              "regexp": "^.*?dashboard:dev \\| (ERROR) in (.+):(\\d+):(\\d+)$",
              "severity": 1,
              "file": 2,
              "line": 3,
              "column": 4
            },
            {
              "regexp": "^.*?dashboard:dev \\| (.*)$",
              "message": 1
            }
          ]
        }
      ],
      "label": "dev:dashboard",
      "detail": "turbo run dev --filter=@i2pacg/builtdifferent-frontend-dashboard...",
      "isBackground": true,
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true,
        "group": "developer"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "NODE_ENV": "development",
          "FORCE_COLOR": "1",
          // Ensure TUI mode is enabled
          "TURBO_FORCE_TUI": "1"
        }
      }
    },
    {
      "label": "Terminate All Tasks",
      "command": "echo ${input:terminate}",
      "type": "shell",
      "problemMatcher": []
    }
  ],
  "inputs": [
    {
      "id": "terminate",
      "type": "command",
      "command": "workbench.action.tasks.terminate",
      "args": "terminateAll"
    }
  ]
}
