/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const AllowedValueTypes: typeof import('./interfaces/models')['AllowedValueTypes']
  const EffectScope: typeof import('vue')['EffectScope']
  const HttpException: typeof import('./interfaces/misc')['HttpException']
  const Model: typeof import('pinia-orm')['Model']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getExistingProp: typeof import('./interfaces/index')['getExistingProp']
  const getTyped: typeof import('./interfaces/index')['getTyped']
  const h: typeof import('vue')['h']
  const hasExistingProp: typeof import('./interfaces/index')['hasExistingProp']
  const hasKey: typeof import('./interfaces/models')['hasKey']
  const inject: typeof import('vue')['inject']
  const isGroup: typeof import('./interfaces/index')['isGroup']
  const isInternalListItem: typeof import('./interfaces/index')['isInternalListItem']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const isType: typeof import('./interfaces/index')['isType']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const timeout: typeof import('./interfaces/index')['timeout']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useApiRequest: typeof import('./composables/useApiRequest')['default']
  const useAppStore: typeof import('./data/index')['useAppStore']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAuth: typeof import('./composables/useAuth')['default']
  const useAxiosRepo: typeof import('@pinia-orm/axios')['useAxiosRepo']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDisplay: typeof import('vuetify')['useDisplay']
  const useEntity: typeof import('./composables/useEntity')['useEntity']
  const useEntityList: typeof import('./composables/useEntityList')['useEntityList']
  const useEntityMedia: typeof import('./composables/useEntityMedia')['useEntityMedia']
  const useI18n: typeof import('vue-i18n')['useI18n']
  const useId: typeof import('vue')['useId']
  const useLanguages: typeof import('./composables/useLanguages')['useLanguages']
  const useLocale: typeof import('vuetify')['useLocale']
  const useLocales: typeof import('./composables/useLocales')['useLocales']
  const useMedia: typeof import('./composables/useMedia')['default']
  const useModel: typeof import('vue')['useModel']
  const useRepo: typeof import('pinia-orm')['useRepo']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useTheme: typeof import('vuetify')['useTheme']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { PagingResponse, ApiResponse, ApiError, ApiRequestConfig, ApiRequestMethods } from './interfaces/api'
  import('./interfaces/api')
  // @ts-ignore
  export type { SignInData, AuthFunctions } from './interfaces/auth'
  import('./interfaces/auth')
  // @ts-ignore
  export type { FieldType, MediaCollections, FormDataType } from './interfaces/crud'
  import('./interfaces/crud')
  // @ts-ignore
  export type { HttpException, ToastMessages, PostCreateOption, PostUpdateOption, LoadDataParams, ErrorData, StoreParams, DataStore, DataFunctions, DataStoreE, MediaFunctions, SearchItem, AllowedFileType, MediaFileLoadedEvent, UpdateFileParams, ValidationError, HttpException } from './interfaces/misc'
  import('./interfaces/misc')
  // @ts-ignore
  export type { AllowedValueTypes, BaseModelProps, ImageProps, AllowedValueTypes } from './interfaces/models'
  import('./interfaces/models')
  // @ts-ignore
  export type { SortItem, TableHeaders, TableHeader, TableSlots, InternalDataTableHeader, BreadcrumbsSlots, InternalBreadcrumbItem, InternalListItem, AutoCompleteProps, CustomFilter, OnClickSelectSelectArg, InternalItem, ValidationRules, IconValue, TabItem, SelectableItem, GroupableItem, Group, DataIteratorItem } from './interfaces/index'
  import('./interfaces/index')
  // @ts-ignore
  export type { Entity } from './composables/useEntity'
  import('./composables/useEntity')
  // @ts-ignore
  export type { ArticleQueryParams } from './data/index'
  import('./data/index')
}

// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly AllowedValueTypes: UnwrapRef<typeof import('./interfaces/models')['AllowedValueTypes']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly HttpException: UnwrapRef<typeof import('./interfaces/misc')['HttpException']>
    readonly Model: UnwrapRef<typeof import('pinia-orm')['Model']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly defineStore: UnwrapRef<typeof import('pinia')['defineStore']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getExistingProp: UnwrapRef<typeof import('./interfaces/index')['getExistingProp']>
    readonly getTyped: UnwrapRef<typeof import('./interfaces/index')['getTyped']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly hasExistingProp: UnwrapRef<typeof import('./interfaces/index')['hasExistingProp']>
    readonly hasKey: UnwrapRef<typeof import('./interfaces/models')['hasKey']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isGroup: UnwrapRef<typeof import('./interfaces/index')['isGroup']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly isType: UnwrapRef<typeof import('./interfaces/index')['isType']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly onWatcherCleanup: UnwrapRef<typeof import('vue')['onWatcherCleanup']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly timeout: UnwrapRef<typeof import('./interfaces/index')['timeout']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useApiRequest: UnwrapRef<typeof import('./composables/useApiRequest')['default']>
    readonly useAppStore: UnwrapRef<typeof import('./data/index')['useAppStore']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAuth: UnwrapRef<typeof import('./composables/useAuth')['default']>
    readonly useAxiosRepo: UnwrapRef<typeof import('@pinia-orm/axios')['useAxiosRepo']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDisplay: UnwrapRef<typeof import('vuetify')['useDisplay']>
    readonly useEntity: UnwrapRef<typeof import('./composables/useEntity')['useEntity']>
    readonly useEntityList: UnwrapRef<typeof import('./composables/useEntityList')['useEntityList']>
    readonly useEntityMedia: UnwrapRef<typeof import('./composables/useEntityMedia')['useEntityMedia']>
    readonly useI18n: UnwrapRef<typeof import('vue-i18n')['useI18n']>
    readonly useId: UnwrapRef<typeof import('vue')['useId']>
    readonly useLanguages: UnwrapRef<typeof import('./composables/useLanguages')['useLanguages']>
    readonly useLocale: UnwrapRef<typeof import('vuetify')['useLocale']>
    readonly useLocales: UnwrapRef<typeof import('./composables/useLocales')['useLocales']>
    readonly useMedia: UnwrapRef<typeof import('./composables/useMedia')['default']>
    readonly useModel: UnwrapRef<typeof import('vue')['useModel']>
    readonly useRepo: UnwrapRef<typeof import('pinia-orm')['useRepo']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useTemplateRef: UnwrapRef<typeof import('vue')['useTemplateRef']>
    readonly useTheme: UnwrapRef<typeof import('vuetify')['useTheme']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}